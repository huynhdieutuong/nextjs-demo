import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import ArceusImage from '../assets/img/arceus.jpg'
import useConstructor from '../custom-hooks/useConstructor'

let isLoading: boolean
isLoading = false // Create constructor 1

const Home: React.FC = () => {
  const [number, setNumber] = useState(0)
  const isLoadingRef = useRef(false) // Create constructor 2

  // Contructor only run 1 time before render. Click Increase number button, constructor not run.

  // Create constructor 1
  if (!isLoading) {
    isLoading = true
    console.log('Create constructor 1');
  }

  // Create constructor 2
  if (!isLoadingRef.current) {
    isLoadingRef.current = true
    console.log('Create constructor 2');
  }

  // Create constructor 3
  useMemo(() => {
    console.log('Create constructor 3');
  }, [])

  // Create constructor 4
  useConstructor(() => {
    console.log('Create constructor 4');
  })

  // useCallback like useMemo, but return function
  // handleIncreaseNumber only create when number change, instead of create when render
  // useCallback & useMemo to improve performance, but need to use when a large function, such as render chart, big data
  const handleIncreaseNumber = useCallback(() => {
    setNumber(number + 1)
    console.log('handleIncreaseNumber')
  }, [number])

  return (
    <div className={styles.container}>
      <button onClick={handleIncreaseNumber}>Increase Number</button>
      <div>{number}</div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="/css/global.css" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <img width="500" src="/img/arcanine.jpg" />

        <img width="500" src={ArceusImage} />

        <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/master/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home